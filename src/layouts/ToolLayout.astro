---
export interface Props {
  title: string;
  description: string;
  keywords?: string;
  ogImage?: string;
}

const { title, description, keywords = "", ogImage } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  <meta name="keywords" content={keywords}>
  <link rel="canonical" href={canonicalURL}>
  
  <!-- Open Graph -->
  <meta property="og:type" content="website">
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:url" content={canonicalURL}>
  {ogImage && <meta property="og:image" content={ogImage}>}
  
  <!-- Twitter Card -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content={title}>
  <meta name="twitter:description" content={description}>
  {ogImage && <meta name="twitter:image" content={ogImage}>}
  
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <meta name="generator" content={Astro.generator}>
</head>
<body>
  <div class="app">
    <header class="header">
      <div class="container">
        <h1 class="logo">{title}</h1>
        <button class="theme-toggle" id="theme-toggle" aria-label="ÂàáÊç¢‰∏ªÈ¢ò">
          <span class="theme-icon">üåô</span>
        </button>
      </div>
    </header>
    
    <main class="main">
      <div class="container">
        <slot />
      </div>
    </main>
    
    <footer class="footer">
      <div class="container">
        <p>&copy; 2024 Base64Â∑•ÂÖ∑. Êú¨Âú∞Â§ÑÁêÜÔºåÊï∞ÊçÆÂÆâÂÖ®„ÄÇ</p>
      </div>
    </footer>
  </div>

  <script>
    // ‰∏ªÈ¢òÂàáÊç¢ÂäüËÉΩ
    const themeToggle = document.getElementById('theme-toggle');
    const themeIcon = themeToggle?.querySelector('.theme-icon');
    const html = document.documentElement;
    
    // ÂàùÂßãÂåñ‰∏ªÈ¢ò
    const savedTheme = localStorage.getItem('theme') || 'light';
    html.setAttribute('data-theme', savedTheme);
    updateThemeIcon(savedTheme);
    
    themeToggle?.addEventListener('click', () => {
      const currentTheme = html.getAttribute('data-theme');
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      
      html.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      updateThemeIcon(newTheme);
    });
    
    function updateThemeIcon(theme: string) {
      if (themeIcon) {
        themeIcon.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
      }
    }
  </script>
</body>
</html>

<style>
  :root {
    /* ‰∫ÆËâ≤‰∏ªÈ¢ò */
    --bg-primary: #ffffff;
    --bg-secondary: #f8fafc;
    --bg-card: #ffffff;
    --text-primary: #1a202c;
    --text-secondary: #4a5568;
    --border-color: #e2e8f0;
    --accent-color: #3182ce;
    --accent-hover: #2c5aa0;
    --success-color: #38a169;
    --error-color: #e53e3e;
    --shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  [data-theme="dark"] {
    /* ÊöóËâ≤‰∏ªÈ¢ò */
    --bg-primary: #1a202c;
    --bg-secondary: #2d3748;
    --bg-card: #2d3748;
    --text-primary: #f7fafc;
    --text-secondary: #cbd5e0;
    --border-color: #4a5568;
    --accent-color: #4299e1;
    --accent-hover: #3182ce;
    --success-color: #48bb78;
    --error-color: #f56565;
    --shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
    --shadow-lg: 0 4px 6px rgba(0, 0, 0, 0.3);
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  html, body {
    height: 100%;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background-color: var(--bg-primary);
    color: var(--text-primary);
    transition: background-color 0.3s ease, color 0.3s ease;
  }
  
  .app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  .header {
    background-color: var(--bg-card);
    border-bottom: 1px solid var(--border-color);
    box-shadow: var(--shadow);
    position: sticky;
    top: 0;
    z-index: 100;
  }
  
  .header .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
  }
  
  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--accent-color);
  }
  
  .theme-toggle {
    background: none;
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    padding: 0.5rem;
    cursor: pointer;
    font-size: 1.2rem;
    transition: background-color 0.3s ease;
  }
  
  .theme-toggle:hover {
    background-color: var(--bg-secondary);
  }
  
  .main {
    flex: 1;
    padding: 2rem 0;
  }
  
  .footer {
    background-color: var(--bg-secondary);
    border-top: 1px solid var(--border-color);
    padding: 1rem 0;
    text-align: center;
    color: var(--text-secondary);
    font-size: 0.875rem;
  }
  
  /* ÂìçÂ∫îÂºèËÆæËÆ° */
  @media (max-width: 768px) {
    .container {
      padding: 0 0.5rem;
    }
    
    .header .container {
      padding: 0.75rem 0.5rem;
    }
    
    .logo {
      font-size: 1.25rem;
    }
    
    .main {
      padding: 1rem 0;
    }
  }
</style> 